
# 利用切片，去掉前后空格
def trim(s):
    while s[0]==' ':
        s = s[1:]
    while s[-1]==' ':
        s = s[:-2]
    return s

s = '        abcds  '
print(trim(s))

# 一个完整的切片表达式包含两个“:”，用于分隔三个参数(start_index、end_index、step)，当只有一个“:”时，默认第三个参数step=1。
#
# step：正负数均可，其绝对值大小决定了切取数据时的‘‘步长”，而正负号决定了“切取方向”，
# 正表示“从左往右”取值，负表示“从右往左”取值。当step省略时，默认为1，即从左往右以增量1取值。
#
# start_index：表示起始索引（包含该索引本身）；该参数省略时，表示从对象“端点”开始取值，
# 至于是从“起点”还是从“终点”开始，则由step参数的正负决定，step为正从“起点”开始，为负从“终点”开始。
#
# end_index：表示终止索引（不包含该索引本身）；该参数省略时，表示一直取到数据“端点”，
# 至于是到“起点”还是到“终点”，同样由step参数的正负决定，step为正时直到“终点”，为负时直到“起点”。

L = [0,1,2,3,4,5,6,7,8,9]

print(L[::-1])
print(L[4:7:-1])  # start_index 和 end_index 要和切片方向相同，切片是从‘开始索引’起往切片方向走。
# >>>a[1:6:-1]
# >>>[]
# 输出为空列表，说明没取到数据。
# step=-1，决定了从右往左取值，而start_index=1到end_index=6决定了从左往右取值，两者矛盾，所以为空。